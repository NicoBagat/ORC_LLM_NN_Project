steps:
  generate_training_data: true
  train_neural_network: true
  run_mpc_with_nn: true

ocp:
  dynamics_type: single_pendulum  # Choose between 'single_pendulum' or 'double_pendulum'
  horizon: 10
  state_dim: 2
  control_dim: 1
  dt: 0.1
  cost_weights:
    state: [1.0, 1.0]  # Weights for state dimemsions
    control: 0.01      # Weight for control inputs
  parameters:
    gravity: 9.81 # Gravitational accelaration
    length: 1.0   # Length of the pendulum (single pendulum)
    mass: 1.0     # Mass of the pendulum (single pendulum)
    length_1: 1.0  # Length of the 1st rod (double pendulum)
    length_2: 1.0  # Length of the 2nd rod (double pendulum)
    mass_1: 1.0    # Mass of the 1st pendulum bob (double pendulum)
    mass_2: 1.0    # Mass of the 2nd pendulum bob (double pendulum)

mpc:
  short_horizon: 5
  test_states:
    - [0.1, 0.2]
    - [0.3, -0.4]

paths:
  training_data: "data/processed/training_data.npy"
  model: "models/neural_network.pt"
  mpc_results: "data/processed/mpc_results.pt"